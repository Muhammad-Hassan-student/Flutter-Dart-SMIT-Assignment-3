import mongoose, {Schema,Document} from 'mongoose'

//Type safety in typeScript
export interface Message extends Document {
    content: string,
    createdAt: Date,
}

const MessageSchema: Schema<Message> = new mongoose.Schema({
    content: {
        type:String,
        required: true,
    },
    createdAt: {
        type: Date,
        required: true,
        default: Date.now,
    }
})

export interface User extends Document{
    username: string,
    email: string,
    password: string,
    verifyCode: string,
    verifyCodeExpiry: Date,
    isVerified: Boolean,
    isAcceptingMessage: Boolean,
    messages: Message[],
}

const userSchema: Schema<User> = new mongoose.Schema({
    username: {
        type: String,
        required: [true, "Username is required"],
        unique: true,
    },
    email: {
        type: String,
        required: [true,"Email is requried"],
        unique: true,
        match: [/.+\@+\..+/,"Please use a valid email address"],
    },
    password: {
        type: String,
        required: [true,"Email is requried"],
    },
    verifyCode: {
        type: String,
        required: [true,"VerifyCode is requried"],
    },
    verifyCodeExpiry: {
        type: Date,
        required: [true,"Verify code expiry is requried"],
    },
    isVerified: {
        type: Boolean,
        default: false,
    },
    isAcceptingMessage: {
        type: Boolean,
        default: true,
    },
    messages: [MessageSchema],
});

const userModel = (mongoose.models.User as mongoose.Model<User> ) ||  mongoose.model<User>('User',userSchema);
export default userModel;

import { z } from 'zod'

export const AcceptMessageSchema = z.object({
  acceptMessages: z.boolean(),
});

import {z} from "zod"

export const messageSchema = z.object({
    content: z.string().min(10,{message: 'Content must be at least 10 characters.'}).max(300, { message: "Content must be no longer than 300 characters" }),
})

import {z} from 'zod'

export const signinSchema = z.object({
    identifier: z.string(),
    password: z.string(),
})

import { z } from "zod";

export const usernameValidation = z
  .string()
  .min(2, "Username must be at least 2 characters")
  .max(22, "Username must be no more than 20 characters")
  .regex(/^[a-zA-Z0-9_]+$/, "Username must not contain special characters");



export const signUpSchema = z.object({
    username: usernameValidation,
    email: z.string().email({message:"Invalid email address"},),
    password: z.string().min(6,"Password must be at least 6 characters"),
});

import { z } from "zod";

export const verifySchema = z.object({
  code: z
    .string()
    .length(6, " Verifucation code must be at least 6 digits")
    
});
